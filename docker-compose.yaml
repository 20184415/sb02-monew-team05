# ── docker-compose.yml ──
version: '3.8'

services:
  db:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB:       ${DB_NAME}
      POSTGRES_USER:     ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 10s
      retries: 5
    networks:
      - monitoring

  part2-5team-monew:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      MONEW_STORAGE_LOCAL_ROOT_PATH: ./monew-storage
      APP_PORT: ${APP_PORT}
      SPRING_PROFILES_ACTIVE:     ${SPRING_PROFILES_ACTIVE}
      SPRING_DATASOURCE_URL:      jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      AWS_S3_ACCESS_KEY:    ${AWS_S3_ACCESS_KEY}
      AWS_S3_SECRET_KEY:    ${AWS_S3_SECRET_KEY}
      AWS_S3_REGION:        ${AWS_S3_REGION}
      AWS_S3_BUCKET:        ${AWS_S3_BUCKET}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${HOST_PORT}:${APP_PORT}"
    volumes:
      - "${STORAGE_LOCAL_ROOT_PATH}:/data/monew-storage"
    restart: always
    networks:
      monitoring:
        aliases:
          - monew-app

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring

volumes:
  postgres-data:
  grafana_data:

networks:
  monitoring:
    driver: bridge
