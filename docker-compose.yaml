version: '3.8'

services:
  db-master:
    image: postgres:15
    container_name: db-master
    env_file: .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_MASTER_PORT:-5432}:5432"
    volumes:
      - postgres-master-data:/var/lib/postgresql/data
      - ./master_conf/pg_hba.conf:/docker-entrypoint-initdb.d/pg_hba.conf
      - ./master_conf/postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
      - ./master_conf/init-custom.sh:/docker-entrypoint-initdb.d/init-custom.sh
      - ./master_conf/init-replication.sql:/docker-entrypoint-initdb.d/init-replication.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 10s
      retries: 5

  db-standby:
    image: postgres:15
    container_name: db-standby
    env_file: .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_STANDBY_PORT:-5433}:5432"
    depends_on:
      db-master:
        condition: service_healthy
    volumes:
      - postgres-standby-data:/var/lib/postgresql/data
      # standby_conf/postgresql.conf는 일단 마운트하지 마!
    entrypoint: /bin/bash
    command: >
      -c 'if [ ! -s "/var/lib/postgresql/data/PG_VERSION" ]; then
      echo "Initializing standby from master...";
      rm -rf /var/lib/postgresql/data/* /var/lib/postgresql/data/.[!.]* /var/lib/postgresql/data/..?*;
      PGPASSWORD=$REPLICATION_PASSWORD pg_basebackup -h db-master -D /var/lib/postgresql/data -U $REPLICATION_USER -vP -Xs -R;
      fi;
      exec docker-entrypoint.sh postgres'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 10s
      retries: 5

  # Redis
  redis:
    image: redis:7.0
    container_name: redis-server
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

  app:
    container_name: spring-app
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_DATASOURCE_MASTER_URL: jdbc:postgresql://db:5432/${DB_NAME}
      SPRING_DATASOURCE_REPLICA_URL: jdbc:postgresql://db:5433/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${APP_PORT:-8080}:8080"
    volumes:
      - "${STORAGE_LOCAL_ROOT_PATH:-./monew-storage}:/data/monew-storage"
    restart: always

volumes:
  postgres-master-data:
  postgres-standby-data:
  redis_data:
